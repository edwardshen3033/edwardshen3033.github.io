<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Java辣鸡收集算法]]></title>
    <url>%2F2018%2F07%2F24%2FJava%E8%BE%A3%E9%B8%A1%E6%94%B6%E9%9B%86%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[垃圾收集算法标记 - 清除 将存活的对象进行标记，然后清理掉未被标记的对象。 不足： 标记和清除过程效率都不高； 会产生大量不连续的内存碎片，导致无法给大对象分配内存。 标记 - 整理 让所有存活的对象都向一端移动，然后直接清理掉端边界以外的内存。 复制 将内存划分为大小相等的两块，每次只使用其中一块，当这一块内存用完了就将还存活的对象复制到另一块上面，然后再把使用过的内存空间进行一次清理。 主要不足是只使用了内存的一半。 现在的商业虚拟机都采用这种收集算法来回收新生代，但是并不是将内存划分为大小相等的两块，而是分为一块较大的 Eden 空间和两块较小的 Survivor 空间，每次使用 Eden 空间和其中一块 Survivor。在回收时，将 Eden 和 Survivor 中还存活着的对象一次性复制到另一块 Survivor 空间上，最后清理 Eden 和使用过的那一块 Survivor。HotSpot 虚拟机的 Eden 和 Survivor 的大小比例默认为 8:1，保证了内存的利用率达到 90%。如果每次回收有多于 10% 的对象存活，那么一块 Survivor 空间就不够用了，此时需要依赖于老年代进行分配担保，也就是借用老年代的空间存储放不下的对象。 分代收集现在的商业虚拟机采用分代收集算法，它根据对象存活周期将内存划分为几块，不同块采用适当的收集算法。 一般将 Java 堆分为新生代和老年代。 新生代使用：复制算法 老年代使用：标记 - 清理 或者 标记 - 整理 算法]]></content>
      <categories>
        <category>Codes</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Bootstrap学习]]></title>
    <url>%2F2018%2F07%2F23%2FBootstrap%E5%AD%A6%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[Bootstrap学习 1.标题：标题的具体运用非常简单，和我们平时运用是一样的，使用&lt;h1&gt;-&lt;h6&gt;标签，分别表示标题一至标题六，h 后面的数字越大，表示级别越小，文本也越小。来看一个简单的效果：右侧代码编辑器中的10-16行的代码。在Bootstrap中为了让非标题元素和标题使用相同的样式，还特意定义了.h1-.h6六个类名。如右侧代码编辑器中 18-23行代码所示： 除此之外，我们在Web的制作中，常常会碰到在一个标题后面紧跟着一行小的副标题。在Bootstrap中他也考虑了这种排版效果，使用了&lt;small&gt;标签来制作副标题。这个副标题具有其自己的一些独特样式： 2.段落 &lt;p&gt;标签用法与普通html一致 3.强调内容在实际项目中，对于一些重要的文本，希望突出强调的部分都会做另外的样式处理。Bootstrap同样对这部分做了一些轻量级的处理。如果想让一个段落p突出显示，可以通过添加类名“.lead”实现，其作用就是增大文本字号，加粗文本，而且对行高和margin也做相应的处理。用法如下：&lt;p class=&quot;lead&quot;&gt;除此之外，Bootstrap还通过元素标签:&lt;small&gt;、&lt;strong&gt;、&lt;em&gt;和&lt;cite&gt;给文本做突出样式处理。 4.粗体在Bootstrap中，可以使用&lt;b&gt;和&lt;strong&gt;标签让文本直接加粗。 5.斜体在排版中，除了用加粗来强调突出的文本之外，还可以使用斜体。在Bootstrap中还可以通过使用标签&lt;em&gt;或&lt;i&gt;来实现。 6.强调相关的类在Bootstrap中除了使用标签&lt;strong&gt;、&lt;em&gt;等说明正文某些字词、句子的重要性，Bootstrap还定义了一套类名，这里称其为强调类名（类似前面说的“.lead”）,这些强调类都是通过颜色来表示强调，具本说明如下： .text-muted：提示，使用浅灰色（#999）.text-primary：主要，使用蓝色（#428bca）.text-success：成功，使用浅绿色(#3c763d).text-info：通知信息，使用浅蓝色（#31708f）.text-warning：警告，使用黄色（#8a6d3b）.text-danger：危险，使用褐色（#a94442） 对应效果如图所示 7.文本对齐风格为了简化操作，方便使用，Bootstrap通过定义四个类名来控制文本的对齐风格： ☑ .text-left：左对齐 ☑ .text-center：居中对齐 ☑ .text-right：右对齐 ☑ .text-justify：两端对齐 8.Bootstrap列表Bootstrap根据平时的使用情形提供了六种形式的列表： ☑ 普通列表 ☑ 有序列表 ☑ 去点列表 ☑ 内联列表 ☑ 描述列表 ☑ 水平描述列表无序列表无序列表和有序列表使用方式和我们平时使用的一样（无序列表使用ul，有序列表使用ol标签），在样式方面，Bootstrap只是在此基础上做了一些细微的优化。去点列表在Bootstrap中默认情况下无序列表和有序列表是带有项目符号的，但在实际工作中很多时候，我们的列表是不需要这个编号的，比如说用无序列表做导航的时候。Bootstrap为众多开发者考虑的非常周道，通过给无序列表添加一个类名“.list-unstyled”,这样就可以去除默认的列表样式的风格。内联列表Bootstrap像去点列表一样，通过添加类名“.list-inline”来实现内联列表，简单点说就是把垂直列表换成水平列表，而且去掉项目符号（编号），保持水平显示。也可以说内联列表就是为制作水平导航而生。注：list-inline要添加在ul标签内定义列表对于定义列表而言，Bootstrap并没有做太多的调整，只是调整了行间距，外边距和字体加粗效果。水平定义列表水平定义列表就像内联列表一样，Bootstrap可以给&lt;dl&gt;添加类名“.dl-horizontal”给定义列表实现水平显示效果。宽屏下的效果（屏幕大于768px）：当你缩小你的浏览器屏幕时，水平定义列表将回复到原始的状态。 9.代码一般在个人博客上使用的较为频繁，用于显示代码的风格。在Bootstrap主要提供了三种代码风格：1、使用&lt;code&gt;&lt;/code&gt;来显示单行内联代码&lt;code&gt;：一般是针对于单个单词或单个句子的代码2、使用&lt;pre&gt;&lt;/pre&gt;来显示多行块代码&lt;pre&gt;：一般是针对于多行代码（也就是成块的代码）3、使用&lt;kbd&gt;&lt;/kbd&gt;来显示用户输入代码&lt;kbd&gt;:一般是表示用户要通过键盘输入的内容4.元素一般用于显示大块的代码，并保证原有格式不变。但有时候代码太多，而且不想让其占有太大的页面篇幅，就想控制代码块的大小。Bootstrap也考虑到这一点，你只需要在pre标签上添加类名“.pre-scrollable”，就可以控制代码块区域最大高度为340px，一旦超出这个高度，就会在Y轴出现滚动条。 10.表格bootstrap为表格提供了1种基础样式和4种附加样式以及1个支持响应式的表格。在使用Bootstrap的表格过程中，只需要添加对应的类名就可以得到不同的表格风格 Bootstrap为表格不同的样式风格提供了不同的类名，主要包括： ☑ .table：基础表格 ☑ .table-striped：斑马线表格 ☑ .table-bordered：带边框的表格 ☑ .table-hover：鼠标悬停高亮的表格 ☑ .table-condensed：紧凑型表格 ☑ .table-responsive：响应式表格 Bootstrap还为表格的行元素提供了五种不同的类名，每种类名控制了行的不同背景颜色，具体说明如下表所示：其使用非常的简单，只需要在元素中添加上表对应的类名，就能达到你自己需要的效果：注：除了”.active”之外，其他四个类名和”.table-hover”配合使用时，Bootstrap针对这几种样式也做了相应的悬浮状态的样式设置，所以如果需要给tr元素添加其他颜色样式时，在”.table-hover”表格中也要做相应的调整。在bootstrap中对表格的结构，跟我们平时使用表格是一样的 基础表格 在Bootstrap中，对于基础表格是通过类名“.table”来控制。如果在&lt;table&gt;元素中不添加任何类名，表格是无任何样式效果的。想得到基础表格，我们只需要在&lt;table&gt;元素上添加“.table”类名，就可以得到Bootstrap的基础表格： 斑马线表格有时候为了让表格更具阅读性，需要将表格制作成类似于斑马线的效果。简单点说就是让表格带有背景条纹效果。在Bootstrap中实现这种表格效果并不困难，只需要在的基础上增加类名“.table-striped”即可：&lt;table class=&quot;table table-striped&quot;&gt;…&lt;/table&gt;其效果与基础表格相比，仅是在tbody隔行有一个浅灰色的背景色。带边框的表格基础表格仅让表格部分地方有边框，但有时候需要整个表格具有边框效果。Bootstrap出于实际运用，也考虑这种表格效果，即所有单元格具有一条1px的边框。Bootstrap中带边框的表格使用方法和斑马线表格的使用方法类似，只需要在基础表格&lt;table class=&quot;table&quot;&gt;基础上添加一个“.table-bordered”类名即可：&lt;table class=&quot;table table-bordered&quot;&gt; …&lt;/table&gt;鼠标悬浮高亮的表格当鼠标悬停在表格的行上面有一个高亮的背景色，这样的表格让人看起来就是舒服，时刻告诉用户正在阅读表格哪一行的数据。Bootstrap的确没有让你失望，他也考虑到这种效果，其提供了一个“.table-hover”类名来实现这种表格效果。鼠标悬停高亮的表格使用也简单，仅需要&lt;table class=&quot;table&quot;&gt;元素上添加类名“table-hover”即可：&lt;table class=&quot;table table-hover&quot;&gt;…&lt;/table&gt;从效果图中可以看出，当你鼠标悬浮在某一单元格上时，单元格所在行的背景色都会变成浅灰色。紧凑型表格紧凑型表格，简单理解，就是单元格没内距或者内距较其他表格的内距更小。换句话说，要实现紧凑型表格只需要重置表格单元格的内距padding的值。那么在Bootstrap中，通过类名“table-condensed”重置了单元格内距值。响应式表格随着各种手持设备的出现，要想让你的Web页面适合千罗万像的设备浏览，响应式设计的呼声越来越高。在Bootstrap中也为表格提供了响应式的效果，将其称为响应式表格。Bootstrap提供了一个容器，并且此容器设置类名“.table-responsive”,此容器就具有响应式效果，然后将&lt;table class=&quot;table&quot;&gt;置于这个容器当中，这样表格也就具有响应式效果。Bootstrap中响应式表格效果表现为：当你的浏览器可视区域小于768px时，表格底部会出现水平滚动条。当你的浏览器可视区域大于768px时，表格底部水平滚动条就会消失。示例如下： 11.表单表单主要功能是用来与用户做交流的一个网页控件，良好的表单设计能够让网页与用户更好的沟通。表单中常见的元素主要包括：文本输入框、下拉选择框、单选按钮、复选按钮、文本域和按钮等。其中每个控件所起的作用都各不相同，而且不同的浏览器对表单控件渲染的风格都各有不同。 对于基础表单，Bootstrap并未对其做太多的定制性效果设计，仅仅对表单内的fieldset、legend、label标签进行了定制。 当然表单除了这几个元素之外，还有input、select、textarea等元素，在Bootstrap框架中，通过定制了一个类名form-control，也就是说，如果这几个元素使用了类名“form-control”，将会实现一些设计上的定制效果。 1、宽度变成了100% 2、设置了一个浅灰色（#ccc）的边框 3、具有4px的圆角 4、设置阴影效果，并且元素得到焦点之时，阴影和边框效果会有所变化 5、设置了placeholder的颜色为#999 水平表单Bootstrap框架默认的表单是垂直显示风格，但很多时候我们需要的水平表单风格（标签居左，表单控件居右）见下图。在Bootstrap框架中要实现水平表单效果，必须满足以下两个条件：1、在&lt;form&gt;元素是使用类名“form-horizontal”。2、配合Bootstrap框架的网格系统。内联表单有时候我们需要将表单的控件都在一行内显示，类似这样的：在Bootstrap框架中实现这样的表单效果是轻而易举的，你只需要在&lt;form&gt;元素中添加类名“form-inline”即可。如果你要在input前面添加一个label标签时，会导致input换行显示。如果你必须添加这样的一个label标签，并且不想让input换行，你需要将label标签也放在容器“form-group”中，如：回过头来看示例，你或许会问，为什么添加了label标签，而且没有放置在”form-group”这样的容器中，input也不会换行；还有label标签怎么没显示出来。如果你仔细看，在label标签运用了一个类名“sr-only”，标签没显示就是这个样式将标签隐藏了。表单控件(输入框input)单行输入框，常见的文本输入框，也就是input的type属性值为text。在Bootstrap中使用input时也必须添加type类型，如果没有指定type类型，将无法得到正确的样式为了让控件在各种表单风格中样式不出错，需要添加类名form-control表单控件(下拉选择框select)Bootstrap框架中的下拉选择框使用和原始的一致，多行选择设置multiple属性的值为multiple。Bootstrap框架会为这些元素提供统一的样式风格。如：表单控件(文本域textarea)文本域和原始使用方法一样，设置rows可定义其高度，设置cols可以设置其宽度。但如果textarea元素中添加了类名“form-control”类名，则无需设置cols属性。因为Bootstrap框架中的“form-control”样式的表单控件宽度为100%或auto。表单控件(复选框checkbox和单选择按钮radio)Bootstrap框架中checkbox和radio有点特殊，Bootstrap针对他们做了一些特殊化处理，主要是checkbox和radio与label标签配合使用会出现一些小问题（最头痛的是对齐问题）。使用Bootstrap框架，开发人员无需考虑太多，只需要按照下面的方法使用即可。从上面的示例，我们可以得知：1、不管是checkbox还是radio都使用label包起来了2、checkbox连同label标签放置在一个名为“.checkbox”的容器内3、radio连同label标签放置在一个名为“.radio”的容器内 表单控件(复选框和单选按钮水平排列)有时候，为了布局的需要，将复选框和单选按钮需要水平排列。Bootstrap框架也做了这方面的考虑：1、如果checkbox需要水平排列，只需要在label标签上添加类名“checkbox-inline”2、如果radio需要水平排列，只需要在label标签上添加类名“radio-inline” 表单控件大小Bootstrap框架还提供了两个不同的类名，用来控制表单控件的高度。这两个类名是：1、input-sm:让控件比正常大小更小2、input-lg:让控件比正常大小更大 表单控件状态(焦点状态)每一种状态都能给用户传递不同的信息，比如表单有焦点的状态可以告诉用户可以输入或选择东西，禁用状态可以告诉用户不可以输入或选择东西，还有就是表单控件验证状态，可以告诉用户的操作是否正确等。那么在Bootstrap框架中的表单控件也具备这些状态。 焦点状态是通过伪类“:focus”来实现。Bootstrap框架中表单控件的焦点状态删除了outline的默认样式，重新添加阴影效果。 要让控件在焦点状态下有上面样式效果，需要给控件添加类名“form-control”]]></content>
      <categories>
        <category>Codes</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[如何使用hexo建立自己的博客（2）]]></title>
    <url>%2F2018%2F07%2F22%2F%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hexo%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%882%EF%BC%89%2F</url>
    <content type="text"><![CDATA[关于next的主题配置首先要了解站点配置文件和主题配置文件：站点配置文件位于博客根目录下的_config.yml文件主题配置文件位于/theme/next文件夹下的_config.yml文件 在站点配置文件中，可以看到如下：title: 对应的是博客主站名称subtitle:对应博客副标题description:对应博客描述keywords:对应博客关键词author:对应博客作者名称language:对应语言（默认为英文，zh-Hans对应简体中文）timezone:默认系统时区注：在进行站点文件配置时，字段冒号和配置内容间必须要有一个半角的空格，不然在编辑时一定会出错以上内容编辑完毕，大概框架如图：注：上图中头像以及搜索分类功能此时还未完成 接下来进行主题配置：1.加入头像选定你想设置的头像，放入themes/next/source/images 我命名为header,进入主题配置文件：找到如下字段进行设置： 2.加入自己的微博链接如果你还想加入其它个人主页链接，也可进行配置，但大部分都是在国内被ban的XD 3.加入友链： 4.添加本地搜索功能 安装 hexo-generator-searchdb，在站点的根目录下执行以下命令： $ npm install hexo-generator-searchdb --save 编辑站点配置文件，新增以下内容到任意位置： search: path: search.xml field: post format: html limit: 10000 编辑 主题配置文件，启用本地搜索功能： Local searchlocal_search: enable: true 5.添加分类 在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 categories ：$ cd your-hexo-site$ hexo new page categories 在编写的markdown文章里添加categories属性即可 注意：如果有集成评论服务，页面也会带有评论。 若需要关闭的话，请添加字段 comments 并将值设置为 false，如：---title: 分类date: 2018-07-22 12:39:04type: &quot;categories&quot;comments: false--- 在菜单中添加链接。编辑 主题配置文件， 添加 categories 到 menu 中，如下:去掉# 即可]]></content>
      <categories>
        <category>Codes</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[tomcat学习笔记1]]></title>
    <url>%2F2018%2F07%2F21%2Ftomcat%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01%2F</url>
    <content type="text"><![CDATA[1.修改端口号conf文件夹里边的 server.xml修改tomcat端口号 2.修改tomcat管理页面的登录密码打开conf文件夹tomcat-users.xml文件在倒数第二行加上以下代码 二.eclipse中整合tomcat1.打开servers选项卡（如果没有，window-show view-servers) 2.点击创建一个server，选择tomcat8 3.在弹出的窗口中，选择tomcat8的安装目录和jre的安装目录 4.点完成之后server创建完毕。 5.新建web项目，在左侧空白地方，右键–new–Dynamic Web Project填写项目名字，选择刚才创建的server，点击finish完成创建。 6.右键项目名字，然后选择run as server运行刚才创建的项目。 三, 改默认编码 改jsp文件编码window–preference–web–jspFile 设置项目的编码 设置eclipse 文件编码]]></content>
      <categories>
        <category>Codes</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[如何使用hexo建立自己的博客（1）]]></title>
    <url>%2F2018%2F07%2F21%2Fmakeblog%2F</url>
    <content type="text"><![CDATA[1.下载node.js 打开第一个，使用npm在本地安装 hexo命令：npm install -g hexo-cli 2.打开项目存放目录hexo i blog //init的缩写 blog是项目名cd blog //切换到站点根目录hexo g //generetor的缩写hexo s //server的缩写 本地server默认端口号 4000，若本地端口号被占用，命令为：hexo s -p xxxx //xxxx为端口号打开浏览器输入localhost：xxxx若成功，则显示hexo默认页面 3.打开git在站点根目录输入git clone https://github.com/iissnan/hexo-theme-next themes/next安装next主题hexo支持各种主题笔者使用next 4.完成后，打开 站点配置文件找到 theme 字段，并将其值更改为 next配置文件就是根目录下的_config.yml文件hexo默认主题landscape，这里改为next 5.在git输入：hexo clean //清除缓存hexo g //重新生成代码hexo s //部署到本地打开localhost：xxxx进行测试next主题样式有三种：Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白Mist - Muse 的紧凑版本，整洁有序的单栏外观Pisces - 双栏 Scheme，小家碧玉似的清新笔者使用Pisces,进行设置，笔者最终成品如图所示，下一节介绍如何配置next主题]]></content>
      <categories>
        <category>Codes</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[游戏购买计划]]></title>
    <url>%2F2018%2F07%2F21%2F2018%2F</url>
    <content type="text"><![CDATA[20186.生化危机6 1507.生化危机5 1508.生化危机4 150 如龙3 230 神界原罪29.蜘蛛侠 350 古墓丽影 35010.荒野大镖客 320 刺客信条奥德赛 32012.任天堂明星大乱斗 400 下半年头等大事Xboxone X 2019王国之心3生化危机2战争机器5鬼泣5火焰纹章 未知光环shadow die twice死亡搁浅仁王TLOU2赛博朋克2077八方旅人 #未完待续]]></content>
      <categories>
        <category>Games</category>
      </categories>
  </entry>
</search>
